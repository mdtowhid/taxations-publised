@model Taxations.Models.User

@{
    ViewBag.Title = "Sign Up";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<style>
    body{
        background: #fbfbfb !important;
    }
</style>

@using (Html.BeginForm("SignUp", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal sign-up-log-in-forms" id="" style="width: 600px">
        <h3 class="pl-3 text-uppercase">Sign Up</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(m => m.EmploymentStatus, "Employment Status", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                <select required name="EmploymentStatus" id="EmploymentStatus" class="form-control">
                    <option value="none">--Select Employment Status--</option>
                    <option value="govt">Government Employee</option>
                    <option value="pvt">Private Employee</option>
                </select>
                <span class="text-danger" id="EmploymentStatusError"></span>
            </div>
        </div>



        <div class="form-row m-0 mb-2 pl-2">
            <div class="col-md-6 border-right pr-3 pb-3">
                <label for="Gender">Gender</label>
                <div>
                    <select name="Gender" class="form-control">
                        <option value="male">Male</option>
                        <option value="female">Female</option>
                    </select>
                </div>
            </div>

            <div class="col-md-6 pl-4 pt-3">
                <label for="IsAutistic">Are you autistic?</label>
                <div>
                    <input type="radio" value="true" name="IsAutistc"/> Yes
                    <input type="radio" value="false" name="IsAutistc" checked /> No
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(m => m.PhotoPath, "Image", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-12">
                <div class="custom-file">
                    <input type="hidden" name="PhotoPath" value="replace" />
                    <input type="file" name="file" class="custom-file-input" id="customFile" required>
                    <label class="custom-file-label" for="customFile">Choose file</label>
                </div>
                <img src="" 
                     alt="Image" 
                     id="previewImg" 
                     style="width: 100px; 
                        height: 100px; 
                        object-fit: cover"
                     class="mt-3 img-thumbnail d-none"/>
            </div>

        </div>

        <input type="hidden" name="IsEmailConfirmed" value="false" />
        <input type="hidden" name="Active" value="false" />


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="container m-0">
                    <div class="row p-0">
                        <div class="col-md-2 p-0">
                            <input type="submit" value="Sign Up" class="btn btn-outline-success btn-bd" />
                        </div>
                        <div class="col-md-4 p-0 ml-3">
                            @Html.ActionLink("Log in", "login", "account", new { @class= "btn btn-outline-info btn-md" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/accont-validate.js")"></script>

    <script>
        $(() => {

            var customFile = $('#customFile');
            var previewImg = $('#previewImg');

            customFile.change((e) => {
                customFile.next().text(e.target.files[0].name);

                let reader = new FileReader();
                reader.onload = (e) => {
                    previewImg.attr('src', e.target.result);
                }

                previewImg.addClass('d-block');
                reader.readAsDataURL(e.target.files[0]);
            });
        });
    </script>
}
