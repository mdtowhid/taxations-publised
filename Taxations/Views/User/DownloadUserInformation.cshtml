@using Taxations.Models
@model Taxations.Models.UserInformation

@{
    ViewBag.Title = "Download User Information";
    Layout = "~/Views/Shared/downloads.cshtml";

    UserInformation ui = new UserInformation();
    if (ViewBag.UserInformations != null)
    {
        ui = ViewBag.UserInformations;
    }

    User user = new User();
    if (ViewBag.User != null)
    {
        user = ViewBag.User;
    }
}

<style>
    .informations {
        box-shadow: none;
    }
</style>


<div class="informations mt-3">
    @if (Model != null)
    {

        <div class="mt-3 ml-4">
            <br />
            <button onclick="getPDF('@Session["UserName"].ToString().Replace(" ", "_")_Informations')" class="btn btn- btn-success">Download</button>
        </div>

        <div id="downloadWrapper" class="border p-3">

            <h2> @Session["UserName"]'s Information</h2>
            <hr />
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>Assessment Year</label>
                        <div>
                            <input type="date" class="form-control" name="AssessmentYear" value="@ui.AssessmentYear" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Name Of Assessee</label>
                        <div>
                            @Html.EditorFor(model => model.NameOfAssessee, new
                            {
                                htmlAttributes =
                                new { @class = "form-control", @Value = ui.NameOfAssessee }
                            })
                            @Html.ValidationMessageFor(model => model.NameOfAssessee, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>



            <input type="hidden" name="EmployeementStatus" value="@Session["UserType"]" />




            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>New TIN</label>
                        <div>
                            @Html.EditorFor(model => model.NewTIN,
                                        new
                                             {
                                                 htmlAttributes =
                                                new { @class = "form-control", @Value = ui.NewTIN }
                                             })
                            @Html.ValidationMessageFor(model => model.NewTIN, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Gender</label>
                        <div>
                            <input type="radio" name="Gender" value="Male" checked />Male
                            <input type="radio" name="Gender" value="Female" />Female
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-4">
                        <label>Old TIN</label>
                        <div>
                            @Html.EditorFor(model => model.OldTIN,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.OldTIN } })
                            @Html.ValidationMessageFor(model => model.OldTIN, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label>Circle</label>
                        <div>
                            @Html.EditorFor(model => model.Circle,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.Circle } })
                            @Html.ValidationMessageFor(model => model.Circle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label>Zone</label>
                        <div>
                            @Html.EditorFor(model => model.Zone,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.Zone } })
                            @Html.ValidationMessageFor(model => model.Zone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>




            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>Tick On Boxes</label>
                        <div id="TickOnBoxesDivId">
                            @*<p>
                                <input type="checkbox" value="A gazetted war-wounded freedom fighter" />
                                <span>A gazetted war-wounded freedom fighter</span>
                            </p>
                            <p>
                                <input type="checkbox" value="A person with disability" />
                                <span>A person with disability</span>
                            </p>
                            <p>
                                <input type="checkbox" value="Aged 65 years or more" />
                                <span>Aged 65 years or more</span>
                            </p>
                            <p>
                                <input type="checkbox" value="A parent/legal guardian of a personwith disability" />
                                <span>
                                    A parent/legal guardian of a person
                                    with disability
                                </span>
                            </p>*@
                            <input type="hidden" name="TickOnBoxes" id="TickOnBoxesDivResult" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Date Of Birth</label>
                        <div>
                            <input type="date" name="DateOfBirth" id="DateOfBirth" class="form-control" value="@ui.DateOfBirth" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>Income Year From</label>
                        <div>
                            @Html.EditorFor(model => model.IncomeYearFrom,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.IncomeYearFrom } })
                            @Html.ValidationMessageFor(model => model.IncomeYearFrom, "",
                            new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Income Year To</label>
                        <div>
                            @Html.EditorFor(model => model.IncomeYearTo,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.IncomeYearTo } })
                            @Html.ValidationMessageFor(model => model.IncomeYearTo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>





            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>Employer Name</label>
                        <div>
                            @Html.EditorFor(model => model.EmployerName,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.EmployerName } })
                            @Html.ValidationMessageFor(model => model.EmployerName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Spouse Name</label>
                        <div>
                            @Html.EditorFor(model => model.SpouseName,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.SpouseName } })
                            @Html.ValidationMessageFor(model => model.SpouseName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                        <label>Spouse TIN</label>
                        <div>
                            @Html.EditorFor(model => model.SpouseTIN,
                                new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                            @Html.ValidationMessageFor(model => model.SpouseTIN, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>Father Name</label>
                        <div>
                            @Html.EditorFor(model => model.FatherName,
                           new { htmlAttributes = new { @class = "form-control", @Value = ui.FatherName } })
                            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Mother Name</label>
                        <div>
                            @Html.EditorFor(model => model.MotherName,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.MotherName } })
                            @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>Present Address</label>
                        <div>
                            @Html.EditorFor(model => model.PresentAddress,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.PresentAddress } })
                            @Html.ValidationMessageFor(model => model.PresentAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Permanent Address</label>
                        <div>
                            @Html.EditorFor(model => model.PermanentAddress,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.PermanentAddress } })
                            @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>Contact Telephone</label>
                        <div>
                            @Html.EditorFor(model => model.ContactTelephone,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.ContactTelephone } })
                            @Html.ValidationMessageFor(model => model.ContactTelephone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Email</label>
                        <div>
                            @Html.EditorFor(model => model.Email,
                                new { htmlAttributes = new { @class = "form-control", @Value = user.Email, @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            <div class="form-group">
                <div class="row">
                    <div class="col-md-6">
                        <label>NID</label>
                        <div>
                            @Html.EditorFor(model => model.NID,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.NID } })
                            @Html.ValidationMessageFor(model => model.NID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>BIN</label>
                        <div>
                            @Html.EditorFor(model => model.BIN,
                                new { htmlAttributes = new { @class = "form-control", @Value = ui.BIN } })
                            @Html.ValidationMessageFor(model => model.BIN, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>



            <div class="form-group border-bottom pb-2">
                <div class="row">
                    <div class="col-md-6">
                        <label>Return Submitted</label>
                        <div>
                            <input type="radio" name="ReturnSubmitted" value="Yes" /> Yes
                            <input type="radio" name="ReturnSubmitted" value="No" /> No
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>ResidentStatus</label>
                        <div>
                            <input type="radio" name="ResidentStatus" value="Yes" /> Yes
                            <input type="radio" name="ResidentStatus" value="No" /> No
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <h3 class="text-danger">Please provide  User Information</h3>
    }
</div>

<p id="tickonBoxes" hidden>@ui.TickOnBoxes</p>


<script src="@Url.Content("~/Scripts/PDFMaker.js")"></script>

<script>
    const textArray = document.querySelector('#tickonBoxes').textContent.split(",");
    const tickOnBoxesDivId = document.querySelector('#TickOnBoxesDivId');
    textArray.forEach((t, i) => {
        tickOnBoxesDivId.innerHTML += `<p><mark>${t}</mark></p>`;
    })
</script>
