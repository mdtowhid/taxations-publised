@model Taxations.Models.UserInformation

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Containers/UserInformation.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="row">
                <input type="hidden" value="@user.Id" name="UserId" />
                <div class="col-md-6">
                    <label>Assessment Year</label>
                    <div>
                        <input type="date" class="form-control" name="AssessmentYear" />
                    </div>
                </div>
                <div class="col-md-6">
                    <label>Name Of Assessee</label>
                    <div>
                        @Html.EditorFor(model => model.NameOfAssessee, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NameOfAssessee, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>




        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <label>New TIN</label>
                    <div>
                        @Html.EditorFor(model => model.NewTIN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewTIN, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label>Gender</label>
                    <div>
                        <input type="radio" name="Gender" value="Male" checked />Male
                        <input type="radio" name="Gender" value="Female" />Female
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-4">
                    <label>Old TIN</label>
                    <div>
                        @Html.EditorFor(model => model.OldTIN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OldTIN, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <label>Circle</label>
                    <div>
                        @Html.EditorFor(model => model.Circle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Circle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <label>Zone</label>
                    <div>
                        @Html.EditorFor(model => model.Zone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Zone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <label>Tick On Boxes</label>
                    <div id="TickOnBoxesDivId">
                        <p>
                            <input type="checkbox" value="A gazetted war-wounded freedom fighter" />
                            <span>A gazetted war-wounded freedom fighter</span>
                        </p>
                        <p>
                            <input type="checkbox" value="A person with disability" />
                            <span>A person with disability</span>
                        </p>
                        <p>
                            <input type="checkbox" value="Aged 65 years or more" />
                            <span>Aged 65 years or more</span>
                        </p>
                        <p>
                            <input type="checkbox" value="A parent/legal guardian of a personwith disability" />
                            <span>
                                A parent/legal guardian of a person
                                with disability
                            </span>
                        </p>
                        <input type="hidden" name="TickOnBoxes" id="TickOnBoxesDivResult" />
                    </div>
                </div>
                <div class="col-md-6">
                    <label>Date Of Birth</label>
                    <div>
                        <input type="date" name="DateOfBirth" id="DateOfBirth" class="form-control" />
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <label>Income Year From</label>
                    <div>
                        @Html.EditorFor(model => model.IncomeYearFrom, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IncomeYearFrom, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label>Income Year To</label>
                    <div>
                        @Html.EditorFor(model => model.IncomeYearTo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IncomeYearTo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>





        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <label>Employer Name</label>
                    <div>
                        @Html.EditorFor(model => model.EmployerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmployerName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label>Spouse Name</label>
                    <div>
                        @Html.EditorFor(model => model.SpouseName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SpouseName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    <label>Spouse TIN</label>
                    <div>
                        @Html.EditorFor(model => model.SpouseTIN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SpouseTIN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <label>Father Name</label>
                    <div>
                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label>Mother Name</label>
                    <div>
                        @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <label>Present Address</label>
                    <div>
                        @Html.EditorFor(model => model.PresentAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PresentAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label>Permanent Address</label>
                    <div>
                        @Html.EditorFor(model => model.PermanentAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <label>Contact Telephone</label>
                    <div>
                        @Html.EditorFor(model => model.ContactTelephone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactTelephone, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label>Email</label>
                    <div>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <label>NID</label>
                    <div>
                        @Html.EditorFor(model => model.NID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <label>BIN</label>
                    <div>
                        @Html.EditorFor(model => model.BIN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BIN, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>



        <div class="form-group border-bottom pb-2">
            <div class="row">
                <div class="col-md-6">
                    <label>Return Submitted</label>
                    <div>
                        <input type="radio" name="ReturnSubmitted" value="Yes" /> Yes
                        <input type="radio" name="ReturnSubmitted" value="No" /> No
                    </div>
                </div>
                <div class="col-md-6">
                    <label>ResidentStatus</label>
                    <div>
                        <input type="radio" name="ResidentStatus" value="Yes" /> Yes
                        <input type="radio" name="ResidentStatus" value="No" /> No
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    <input type="submit" value="Update" class="btn btn-outline-success btn-md float-right mt-2 mr-3" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(() => {
            let tickOnBoxesDivIdText = '';
            $('#TickOnBoxesDivId input[type="checkbox"]').change(function () {
                tickOnBoxesDivIdText = tickOnBoxesDivIdText + this.value + ', ';
                $('#TickOnBoxesDivResult').val(tickOnBoxesDivIdText);
                console.log($('#TickOnBoxesDivResult').val());
            });

        });
    </script>
}
